<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tech.youmu.ckl.mapper.HotelRoomRecordMapper">

	<resultMap id="BaseResultMap" type="HotelRoomRecordInfo" autoMapping="true">
		<id column="id" property="id"/>
		<id column="bookDate" property="bookDate" />
		<collection property="hotelRooms" ofType="HotelRoom">
			<id column="hrid" property="id"/>
			<result column="hrname" property="name"/>
			<result column="hrremainNum" property="remainNum"/>
			<result column="hrrid" property="recordId"/>
		</collection>
	</resultMap>
	
	<sql id="saveSql">
		insert into hotel_room_record
		(
			type_id,
			online_num,
			offline_num,
			book_date,
			create_time
		)
		values(
			#{room.id},
			#{onlineNum},
			#{offlineNum},
			#{bookDate},
			now()
		)
	</sql>
	
	<!-- 添加一个房间记录 -->
	<insert id="save" parameterType="HotelRoomRecord">
		<include refid="saveSql" />
	</insert>
	
	<insert id="batchSave">
	    insert into hotel_room_record
		(
			type_id,
			online_num,
			offline_num,
			book_date,
			create_time
		)
		values
		<foreach collection="records" item="record" separator=",">
			(
				#{record.room.id},
				#{record.onlineNum},
				#{record.offlineNum},
				#{record.bookDate},
				now()
			)
		</foreach>
	</insert>
	
	<update id="addOfflineRoomNum" parameterType="long">
		UPDATE hotel_room_record
		SET offline_num = offline_num + 1
		WHERE
			is_del = 0
		AND id = #{id} and (offline_num + online_num) &lt; (select total_num from hotel_room where id = type_id)
	</update>
	
	<update id="removeOfflineRoomNum" parameterType="long">
		update hotel_room_record set offline_num = offline_num - 1
		where is_del = 0 and id = #{id} and offline_num > 0
	</update>

	<sql id="whereSql">
		<choose>
			<when test="startDate != null and endDate != null">
				and hrr.book_date between #{startDate} and #{endDate}
			</when>
			<otherwise>
				and hrr.book_date between curdate() and date_add(curdate(), interval 2 month)
			</otherwise>
		</choose>
		<where>
			<if test="hotelId != null">
				and h.id = #{hotelId}
			</if>
			and h.is_del = 0 and hr.id is not null
		</where>
	</sql>
	
	<sql id="pageSql">
		<if test="start != null and end != null">
				and hrr.book_date &gt;= date(#{start})
				and hrr.book_date &lt; date(#{end})
		</if>
	</sql>
	
	<!-- 查询分页条数 -->
	<select id="getCountByQuery" parameterType="HotelRoomRecordQuery" resultType="long">
		select
			count(distinct hrr.book_date)
		from hotel h
		left join hotel_room hr on hr.hotel_id = h.id and hr.is_del = 0
		left join hotel_room_record hrr on hrr.type_id = hr.id and hrr.is_del = 0
		<include refid="whereSql" />
	</select>
	
	
	<!-- 分页+高级查询 -->
	<select id="getByQuery" parameterType="BaseQuery" resultMap="BaseResultMap">
		select
			h.id id,
			h.name hotelName,
			hrr.id hrrid,
			hrr.book_date bookDate,
			hr.id hrid, 
			hr.name hrname,
			ifnull(hr.total_num,0)-ifnull(hrr.online_num,0)-ifnull(hrr.offline_num,0) hrremainNum
		from hotel h
		left join hotel_room hr on hr.hotel_id = h.id and hr.is_del = 0
		left join hotel_room_record hrr on hrr.type_id = hr.id and hrr.is_del = 0 
		<include refid="whereSql" />
		<include refid="pageSql" />
		group by hrr.book_date,hr.id
		order by hrr.book_date asc
	</select>
	
	<select id="existRecordCount" resultType="long">
	    select count(id) from hotel_room_record where type_id=#{id} and book_date = date(#{bookDate}) and is_del = 0
	</select>
</mapper>